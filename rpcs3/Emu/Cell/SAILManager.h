#pragma once
#include "Emu/SysCalls/Modules/cellSail.h"

//more enums to keep track of state
enum CellSailPlayerStateType
{
	CELL_SAIL_PLAYER_STATE_INITIALIZED = 0,
	CELL_SAIL_PLAYER_STATE_BOOT_TRANSITION = 1,
	CELL_SAIL_PLAYER_STATE_CLOSED = 2,
	CELL_SAIL_PLAYER_STATE_OPEN_TRANSITION = 3,
	CELL_SAIL_PLAYER_STATE_OPENED = 4,
	CELL_SAIL_PLAYER_STATE_START_TRANSITION = 5,
	CELL_SAIL_PLAYER_STATE_RUNNING = 6,
	CELL_SAIL_PLAYER_STATE_STOP_TRANSITION = 7,
	CELL_SAIL_PLAYER_STATE_CLOSE_TRANSITION = 8,
	CELL_SAIL_PLAYER_STATE_LOST = 9,
	_CELL_SAIL_PLAYER_STATE_TYPE_NUM_OF_ELEMENTS = 10,
};


enum CellSailPlayerCallType
{
	CELL_SAIL_PLAYER_CALL_NONE = 0,
	CELL_SAIL_PLAYER_CALL_BOOT = 1,
	CELL_SAIL_PLAYER_CALL_OPEN_STREAM = 2,
	CELL_SAIL_PLAYER_CALL_CLOSE_STREAM = 3,
	CELL_SAIL_PLAYER_CALL_OPEN_ES_AUDIO = 4,
	CELL_SAIL_PLAYER_CALL_OPEN_ES_VIDEO = 5,
	CELL_SAIL_PLAYER_CALL_OPEN_ES_USER = 6,
	CELL_SAIL_PLAYER_CALL_CLOSE_ES_AUDIO = 7,
	CELL_SAIL_PLAYER_CALL_CLOSE_ES_VIDEO = 8,
	CELL_SAIL_PLAYER_CALL_CLOSE_ES_USER = 9,
	CELL_SAIL_PLAYER_CALL_START = 10,
	CELL_SAIL_PLAYER_CALL_STOP = 11,
	CELL_SAIL_PLAYER_CALL_NEXT = 12,
	CELL_SAIL_PLAYER_CALL_REOPEN_ES_AUDIO = 13,
	CELL_SAIL_PLAYER_CALL_REOPEN_ES_VIDEO = 14,
	CELL_SAIL_PLAYER_CALL_REOPEN_ES_USER = 15,
	_CELL_SAIL_PLAYER_CALL_TYPE_NUM_OF_ELEMENTS = 16, 
};

class SAILManager 
	: public ThreadBase
{
	//mem_ptr_t<CellSailPlayer> m_sailPlayer;
	CellSailPlayer *m_sailPlayer;
	bool m_booted;
public:
	SAILManager(mem_ptr_t<CellSailPlayer> player);
	virtual std::string GetThreadName() const { return "SailThread"; }
	void Close();
protected:
private:
	void CallBoot();
	virtual void Task();

};